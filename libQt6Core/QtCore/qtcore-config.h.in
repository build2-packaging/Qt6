// "Supports scripting Qt-based applications."
//
#define QT_FEATURE_properties 1

// "Provides easing curve" (animation, interpolation between 0 and 1).
//
#define QT_FEATURE_easingcurve 1

// "Provides a framework for animations."
//
#define QT_FEATURE_animation 1

// "Provides hierarchical finite state machines."
//
#define QT_FEATURE_statemachine 1

// "QEventTransition class"
//
#define QT_FEATURE_qeventtransition 1

// "Supports non-unicode text conversions."
//
#define QT_FEATURE_codecs 1

// "Supports conversions between text encodings."
//
#define QT_FEATURE_textcodec 1

// "Provides MIME type handling."
//
#define QT_FEATURE_mimetype 1

// "Supports big codecs, e.g. CJK."
//
#define QT_FEATURE_big_codecs 1

// "CBOR stream reading and writing"
//
#define QT_FEATURE_cborstreamreader 1
#define QT_FEATURE_cborstreamwriter 1

// "Provides support for command line parsing."
//
#define QT_FEATURE_commandlineparser 1

// "Provides the item model for item views"
//
#define QT_FEATURE_itemmodel 1

// "Supports processing of data passed between another model and a view."
//
#define QT_FEATURE_proxymodel 1

// "Supports concatenating source models."
//
#define QT_FEATURE_concatenatetablesproxymodel 1

// "Supports proxying a source model unmodified."
//
#define QT_FEATURE_identityproxymodel 1

// "Supports sorting and filtering of data passed between another model and a
// view."
//
#define QT_FEATURE_sortfilterproxymodel 1

// "Provides a model that supplies strings to views."
//
#define QT_FEATURE_stringlistmodel 1

// "Provides a proxy to swap rows and columns of a model."
//
#define QT_FEATURE_transposeproxymodel 1

// "Supports month and day names in dates."
//
#define QT_FEATURE_textdate 1

// "Provides conversion between dates and strings."
//
#define QT_FEATURE_datestring 1

// "Provides fast file system iteration."
//
#define QT_FEATURE_filesystemiterator 1

// "Provides an interface for monitoring files and directories for
// modifications."
//
#define QT_FEATURE_filesystemwatcher 1

// "Provides keyboard accelerators and shortcuts."
//
#define QT_FEATURE_shortcut 1

// "Provides a framework for gestures."
//
#define QT_FEATURE_gestures 1

// "Support the Islamic Civil calendar"
//
#define QT_FEATURE_islamiccivilcalendar 1

// "Support the Jalali (Persian) calendar"
//
#define QT_FEATURE_jalalicalendar 1

// (QLibrary) "Provides a wrapper for dynamically loaded libraries."
//
#undef qtcore_config_HAVE_DLOPEN
#if defined(qtcore_config_HAVE_DLOPEN) || defined(_WIN32)
#  define QT_FEATURE_library 1
#else
#  define QT_FEATURE_library -1
#endif

#define QT_FEATURE_regularexpression 1

// "Provides persistent application settings."
//
#define QT_FEATURE_settings 1

// "Provides an I/O device that operates on temporary files."
//
#define QT_FEATURE_temporaryfile 1

// "Provides support for time-zone handling."
//
#define QT_FEATURE_timezone 1

// "Provides support for extracting the top level domain from URLs.
//
#define QT_FEATURE_topleveldomain 1

// "Supports translations using QObject::tr()."
//
#define QT_FEATURE_translation 1

// "Provides a simple streaming API for XML."
//
#define QT_FEATURE_xmlstream 1
#define QT_FEATURE_xmlstreamreader 1
#define QT_FEATURE_xmlstreamwriter 1

// "Provides a higher-level abstraction of environment variables."
//
#define QT_FEATURE_processenvironment 1

// "Supports external process invocation."
//
#define QT_FEATURE_process 1

#define QT_FEATURE_sharedmemory 1
#define QT_FEATURE_systemsemaphore 1

#undef qtcore_config_HAVE_EVENTFD
#ifndef qtcore_config_HAVE_EVENTFD
#  define QT_NO_EVENTFD
#endif

#undef qtcore_config_HAVE_THREADSAFE_CLOEXEC
#ifdef qtcore_config_HAVE_THREADSAFE_CLOEXEC
#  define QT_THREADSAFE_CLOEXEC
#endif

#define QT_FEATURE_std_atomic64 1
#define QT_FEATURE_cxx11_future 1
#define QT_FEATURE_cxx17_filesystem 1

// Needs to be defined if ICU is used (which it is).
//
// NOTE: remember QT_FEATURE_iconv in qtcore-config_p.h.in.
//
#define QT_NO_ICONV
